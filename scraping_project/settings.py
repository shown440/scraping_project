"""
Django settings for scraping_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-(deqcwe28s000lpd0=21@h-kyc(v*$7!_b&(=2e2m3#bg+2fed'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # custom application registration
    'app_auth.apps.AppAuthConfig',
    'app_scrap.apps.AppScrapConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    
    ### CORS Middleware
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    
    ### CSRF Middleware
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

### ------------------------------------------------------- ###
### CORS CONFIGURATIONS
### ------------------------------------------------------- ###
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = (
    '*'
)
CORS_ALLOW_HEADERS = (
    '*'
)
CORS_ALLOW_CREDENTIALS = True
X_FRAME_OPTIONS = 'ALLOWALL'
XS_SHARING_ALLOWED_METHODS = ['POST', 'GET', 'OPTIONS', 'PUT', 'DELETE']

########################################################
### CSRF CONFIGURATIONS
######################################################## 
# SECURE_SSL_REDIRECT = True  # Redirect all HTTP traffic to HTTPS
# SESSION_COOKIE_SECURE = True  # Ensures session cookies are sent over HTTPS
CSRF_COOKIE_SECURE = True   #True  # Ensures CSRF cookies are only sent over HTTPS
CSRF_TRUSTED_ORIGINS = [
    "http://localhost",
    "http://127.0.0.1",
    "http://localhost:8006",
    "http://127.0.0.1:8006",
    # "https://tl-adss-api-shaif.rimes.int",
    # "http://tl-adss-api-shaif.rimes.int",
]

ROOT_URLCONF = 'scraping_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'scraping_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
USE_I18N = True 

USE_TZ = True  # Should already be True by default
TIME_ZONE = 'Asia/Dhaka'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_ROOT  = os.path.join(BASE_DIR, 'static/')
STATIC_URL = '/static/'
# STATIC_URL = 'static/'

# Media files (Any kind of files [like image, audio, video, word, excel and many more])
MEDIA_ROOT  = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'
# print("MEDIA_URL: ",MEDIA_URL)


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# findout the logs of whole project
# all permission comand: sudo chmod 777 error.log
LOGGING_DIR = str(BASE_DIR) + '/media/log/scrap/' 
if not os.path.exists(LOGGING_DIR):
    os.makedirs(LOGGING_DIR)
# print("Logging directory: ", LOGGING_DIR)
ERROR_LOG_FILE = LOGGING_DIR + 'error.log'
if not os.path.exists(ERROR_LOG_FILE):
    with open(ERROR_LOG_FILE, 'w') as file:
        file.write('Error log created.')


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,  # Important to keep Django's default loggers
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler', 
            'filename': ERROR_LOG_FILE,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'ERROR',  # Set the level to ERROR to only display errors
        },
        'django.request': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'request_logger': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        # 'django': {
        #     'handlers': ['file'],
        #     'level': 'DEBUG',
        #     'propagate': True,
        # },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',  # Adjust the level as needed
    },
}




ASGI_APPLICATION = 'scraping_project.asgi.application'

# default user authentication
AUTH_USER_MODEL = 'app_auth.ScrapUser'
LOGIN_URL = 'login'
# LOGIN_REDIRECT_URL = '/'     
# LOGIN_REDIRECT_URL = '/homepage/'
LOGIN_REDIRECT_URL = '/scrap/dashboard/'
LOGOUT_REDIRECT_URL = 'login'

SESSION_COOKIE_AGE = 1800  # 30 minutes in seconds
SESSION_SAVE_EVERY_REQUEST = True
