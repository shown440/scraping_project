# Generated by Django 5.2.4 on 2025-07-06 10:13

import app_auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=1024, verbose_name='name of user')),
                ('email', models.EmailField(max_length=191, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='user creation date')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is a admin')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is a staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='if a superuser')),
                ('device_id', models.CharField(blank=True, max_length=512, null=True, verbose_name='ID of device')),
                ('reset_code', models.CharField(blank=True, default=None, editable=False, max_length=32, null=True, verbose_name='password reset code')),
                ('profile_image', models.FileField(blank=True, null=True, upload_to=app_auth.models.upload_profile_image, verbose_name='profile image path')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='name of role')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='name of status')),
            ],
            options={
                'verbose_name': 'Scrap User Status',
                'verbose_name_plural': 'Scrap User Status',
            },
        ),
        migrations.CreateModel(
            name='PendingUser',
            fields=[
            ],
            options={
                'verbose_name': 'Pending User',
                'verbose_name_plural': 'Pending Users',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('app_auth.scrapuser',),
        ),
        migrations.CreateModel(
            name='RoleConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_auth.role')),
                ('user', models.ForeignKey(blank=True, limit_choices_to={'status': 1}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_role_conf_fk', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Role Configuration',
                'verbose_name_plural': 'Role Configurations',
            },
        ),
        migrations.AddField(
            model_name='scrapuser',
            name='role',
            field=models.ManyToManyField(blank=True, through='app_auth.RoleConfiguration', to='app_auth.role'),
        ),
        migrations.AddField(
            model_name='scrapuser',
            name='status',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='scrap_user_status_type', to='app_auth.status'),
        ),
        migrations.AddIndex(
            model_name='scrapuser',
            index=models.Index(fields=['email'], name='scr_usr_email_idx'),
        ),
    ]
